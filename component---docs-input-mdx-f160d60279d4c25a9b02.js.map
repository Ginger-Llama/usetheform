{"version":3,"sources":["webpack:///../docs/Input.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Form","Submit","asyncTestInput","Input","useValidation","useAsyncValidation","type","name","value","placeholder","checked","reducers","nextValue","prevValue","trim","undefined","test","status","validation","touched","error","asyncStatus","asyncValidation","isMDXComponent"],"mappings":"+TAcaA,G,UAAe,S,gMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,YAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,SADR,SAGA,qEAAoD,6BAAGC,WAAW,KAAQ,CACtE,KAAQ,6DADwC,yBAApD,uDAE0F,6BAAGA,WAAW,KAAQ,CAC5G,KAAQ,iDAD8E,yBAF1F,KAKA,iBAAQ,CACN,GAAM,SADR,SAGA,qBAAG,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,SAA1B,YACA,wCAAuB,6BAAGA,WAAW,KAAQ,CACzC,KAAQ,6DADW,yBAAvB,KAGA,qBAAG,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,SAA1B,YACA,4DAA2C,uBAA3C,wCACiC,0BAAYA,WAAW,KAAvB,wBADjC,KACuG,sBAAQA,WAAW,KAAnB,QADvG,4BAEA,qBAAG,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,UAA1B,YACA,6DAA4C,uBAA5C,KACF,sBAAQA,WAAW,KAAnB,SADE,uDAC+F,0BAAYA,WAAW,KAAvB,yBAD/F,MAEA,qBAAG,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,UAA1B,qBACA,0DAAyC,kBAAIA,WAAW,KAAf,SAAzC,aACA,qBAAG,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,YAA1B,aACA,0CAAyB,kBAAIA,WAAW,KAAf,SAAzB,iFACA,qBAAG,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,YAA1B,aACA,6EAA4D,kBAAIA,WAAW,KAAf,SAA5D,MACA,2BAAU,kBAAIA,WAAW,KAAf,QAAV,kIACA,qBAAG,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,aAA1B,sBACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,qDAIL,oJAEA,qBAAG,sBAAQA,WAAW,KAAI,0BAAYA,WAAW,UAAvB,aAA1B,mCACA,6KACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,iFAKL,iBAAQ,CACN,GAAM,eADR,eAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,6DAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,udAAwgBC,SAAO,GAChjBL,QACAH,kBACAS,eACAC,SACAC,WACAC,mBACAC,UACAC,kBACAC,wBATgjB,gBAUhjBf,IAVgjB,EAWhjBH,eAXgjB,GAY/iBO,QAAQ,cACb,YAAC,IAAD,CAAMA,QAAQ,QACZ,YAAC,IAAD,CAAOY,KAAK,OAAOC,KAAK,OAAOC,MAAM,MAAMC,YAAY,OAAOf,QAAQ,UACtE,YAAC,IAAD,CAAOY,KAAK,QAAQC,KAAK,SAASC,MAAM,IAAIC,YAAY,IAAIf,QAAQ,UACpE,YAAC,IAAD,CAAOY,KAAK,QAAQC,KAAK,SAASC,MAAM,IAAIC,YAAY,IAAIf,QAAQ,UACpE,YAAC,IAAD,CAAOY,KAAK,QAAQC,KAAK,SAASC,MAAM,QAAQC,YAAY,QAAQf,QAAQ,UAC5E,YAAC,IAAD,CAAOY,KAAK,WAAWC,KAAK,UAAUG,SAAO,EAACD,YAAY,WAAWf,QAAQ,UAC7E,YAAC,IAAD,CAAOY,KAAK,WAAWC,KAAK,UAAUE,YAAY,WAAWf,QAAQ,UACrE,YAAC,IAAD,CAAOY,KAAK,OAAOC,KAAK,OAAOb,QAAQ,YAGvC,iBAAQ,CACN,GAAM,YADR,YAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,iDAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kcAA2cC,SAAO,GACnfL,QACAH,kBACAS,eACAC,SACAC,WACAC,mBACAC,UACAC,kBACAC,wBATmf,gBAUnff,IAVmf,EAWnfH,eAXmf,GAYlfO,QAAQ,eACR,WAKC,OAAO,YAAC,IAAD,CAAMA,QAAQ,QACrB,YAAC,IAAD,CAAOY,KAAK,SAASC,KAAK,oBAAoBI,SAAU,CAH5B,SAACC,EAAWC,GAAZ,OAA0BD,GAAa,EAAIC,EAAYD,GAFvD,SAACA,EAAWC,GAAZ,OAA0BD,EAAY,GAAKC,EAAYD,IAKiBH,YAAY,SAASD,MAAM,IAAId,QAAQ,cAI/I,iBAAQ,CACN,GAAM,qBADR,qBAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,mDAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,ykBAAglBC,SAAO,GACxnBL,QACAH,kBACAS,eACAC,SACAC,WACAC,mBACAC,UACAC,kBACAC,wBATwnB,gBAUxnBf,IAVwnB,EAWxnBH,eAXwnB,GAYvnBO,QAAQ,eACR,WACC,IADK,EAKwBU,YAAc,CAF1B,SAAAI,GAAK,OAAIA,GAA0B,KAAjBA,EAAMM,YAAgBC,EAAY,YAFhD,SAAAP,GAAK,OAAMA,GAAU,4CAA4CQ,KAAKR,QAAUO,EAAY,oBAI1GE,EALF,KAKUC,EALV,KAML,OAAO,YAAC,IAAD,CAAMxB,QAAQ,QACrB,YAAC,IAAD,aAAOY,KAAK,OAAOC,KAAK,QAAQY,SAAO,EAACV,YAAY,SAAYS,EAAhE,CAA4ExB,QAAQ,WACnFuB,EAAOG,OAAS,yBAAQH,EAAOG,OAChC,YAAC,IAAD,CAAQ1B,QAAQ,eAIpB,iBAAQ,CACN,GAAM,sBADR,sBAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,gDAIL,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,ssBAA6sBC,SAAO,GACrvBL,QACAH,kBACAS,eACAC,SACAC,WACAC,mBACAC,UACAC,kBACAC,wBATqvB,gBAUrvBf,IAVqvB,EAWrvBH,eAXqvB,GAYpvBO,QAAQ,eACR,WAAM,MACkCW,YAAmBH,KAAnDmB,EADF,KACeC,EADf,KAEL,OAAO,YAAC,IAAD,CAAM5B,QAAQ,QACrB,YAAC,IAAD,aAAOY,KAAK,OAAOC,KAAK,WAAWY,SAAO,EAACV,YAAY,YAAea,EAAtE,CAAuF5B,QAAQ,gBACvEqB,IAAvBM,EAAYJ,QAAwB,wDACb,eAAvBI,EAAYJ,QAA2B,wCAChB,eAAvBI,EAAYJ,QAA2B,yBAAQI,EAAYb,OACpC,iBAAvBa,EAAYJ,QAA6B,yBAAQI,EAAYb,OAC9D,uBACA,YAAC,IAAD,CAAQd,QAAQ,eAIpB,iBAAQ,CACN,GAAM,wBADR,yBAGA,uBAAK,gCAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,8gB,8LA6BTJ,EAAWgC,gBAAiB","file":"component---docs-input-mdx-f160d60279d4c25a9b02.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/iusehooks/usetheform/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Form } from \"./helpers/Form\";\nimport { Submit } from \"./helpers/Submit\";\nimport { asyncTestInput } from \"./helpers/utils/index.js\";\nimport { InputLabel as Input } from \"./helpers/InputLabel\";\nimport { useValidation, useAsyncValidation } from './../src';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h1>\n    <p>{`It renders all the inputs of type listed at: `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3schools.com/html/html_form_input_types.asp\"\n      }}>{`W3schools Input Types`}</a>{` and accepts as props any html attribute listed at: `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3schools.com/tags/tag_input.asp\"\n      }}>{`Html Input Attributes`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`type`}</inlineCode></strong>{`: string`}</p>\n    <p>{`Type listed at: `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3schools.com/html/html_form_input_types.asp\"\n      }}>{`W3schools Input Types`}</a>{`.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`name`}</inlineCode></strong>{`: string`}</p>\n    <p>{`A field's name in Usetheform state. `}<br />{`\nIf your Input is rendered within a `}<inlineCode parentName=\"p\">{`<Collection array />`}</inlineCode>{`, `}<strong parentName=\"p\">{`name`}</strong>{` is not allowed as prop.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`index`}</inlineCode></strong>{`: string`}</p>\n    <p>{`A field's index in array Collection. `}<br />{`\n`}<strong parentName=\"p\">{`index`}</strong>{` is only allowed If your Input is rendered within a `}<inlineCode parentName=\"p\">{`<Collection array /> `}</inlineCode>{`. `}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`value`}</inlineCode></strong>{`: string | number`}</p>\n    <p>{`Specifies the initial value of an `}<em parentName=\"p\">{`input`}</em>{` element.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`checked`}</inlineCode></strong>{`: boolean`}</p>\n    <p>{`Specifies that an `}<em parentName=\"p\">{`input`}</em>{` element should be pre-selected or not (for type=\"checkbox\" or type=\"radio\").`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`touched`}</inlineCode></strong>{`: boolean`}</p>\n    <p>{`A field that has been touched/visited. Default value `}<em parentName=\"p\">{`false`}</em>{`. `}</p>\n    <p>{`If `}<em parentName=\"p\">{`true`}</em>{` validation messages (sync and async) will be showing only when the event onBlur of the field is triggered by the user action.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`reducers`}</inlineCode></strong>{`: array | function`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`(nextValue, prevValue, formState) => nextValue\n`}</code></pre>\n    <p>{`An array whose values correspond to different reducing functions.\nReducers functions specify how the Input's value change.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`innerRef`}</inlineCode></strong>{`: object (a mutable ref object)`}</p>\n    <p>{`When you need to access the underlying DOM node created by Input (e.g. to call focus), you can use a ref to store a reference to the input dom node.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const ref = useRef(null)\n<Input innerRef={ref} type=\"text\" name=\"test\" />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import { Form, Input, Collection } from 'usetheform'\n`}</code></pre>\n    <Playground __position={0} __code={'<Form>\\n  <Input type=\\\"text\\\" name=\\\"name\\\" value=\\\"foo\\\" placeholder=\\\"Name\\\" />\\n  <Input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"M\\\" placeholder=\\\"M\\\" />\\n  <Input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"F\\\" placeholder=\\\"F\\\" />\\n  <Input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"Other\\\" placeholder=\\\"Other\\\" />\\n  <Input type=\\\"checkbox\\\" name=\\\"option1\\\" checked placeholder=\\\"Option 1\\\" />\\n  <Input type=\\\"checkbox\\\" name=\\\"option2\\\" placeholder=\\\"Option 2\\\" />\\n  <Input type=\\\"file\\\" name=\\\"file\\\" />\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      asyncTestInput,\n      Input,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Form mdxType=\"Form\">\n    <Input type=\"text\" name=\"name\" value=\"foo\" placeholder=\"Name\" mdxType=\"Input\" />\n    <Input type=\"radio\" name=\"gender\" value=\"M\" placeholder=\"M\" mdxType=\"Input\" />\n    <Input type=\"radio\" name=\"gender\" value=\"F\" placeholder=\"F\" mdxType=\"Input\" />\n    <Input type=\"radio\" name=\"gender\" value=\"Other\" placeholder=\"Other\" mdxType=\"Input\" />\n    <Input type=\"checkbox\" name=\"option1\" checked placeholder=\"Option 1\" mdxType=\"Input\" />\n    <Input type=\"checkbox\" name=\"option2\" placeholder=\"Option 2\" mdxType=\"Input\" />\n    <Input type=\"file\" name=\"file\" mdxType=\"Input\" />\n  </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"reducers\"\n    }}>{`Reducers`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import { Form, Input } from 'usetheform'\n`}</code></pre>\n    <Playground __position={1} __code={'() => {\\n  const prevNumberGreater10 = (nextValue, prevValue) =>\\n    nextValue > 10 ? prevValue : nextValue\\n  const prevNumberLessThan1 = (nextValue, prevValue) =>\\n    nextValue <= 0 ? prevValue : nextValue\\n  return (\\n    <Form>\\n      <Input\\n        type=\\\"number\\\"\\n        name=\\\"numberWithReducer\\\"\\n        reducers={[prevNumberLessThan1, prevNumberGreater10]}\\n        placeholder=\\\"Number\\\"\\n        value=\\\"1\\\"\\n      />\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      asyncTestInput,\n      Input,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const prevNumberGreater10 = (nextValue, prevValue) => nextValue > 10 ? prevValue : nextValue;\n\n        const prevNumberLessThan1 = (nextValue, prevValue) => nextValue <= 0 ? prevValue : nextValue;\n\n        return <Form mdxType=\"Form\">\n        <Input type=\"number\" name=\"numberWithReducer\" reducers={[prevNumberLessThan1, prevNumberGreater10]} placeholder=\"Number\" value=\"1\" mdxType=\"Input\" />\n      </Form>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"validation---sync\"\n    }}>{`Validation - Sync`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`  import { useValidation } from 'usetheform'\n`}</code></pre>\n    <Playground __position={2} __code={'() => {\\n  const isValidEmail = value =>\\n    !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\\\.[A-Z]{2,4}$/i.test(value))\\n      ? undefined\\n      : \\'Mail not Valid\\'\\n  const required = value =>\\n    value && value.trim() !== \\'\\' ? undefined : \\'Required\\'\\n  const [status, validation] = useValidation([required, isValidEmail])\\n  return (\\n    <Form>\\n      <Input\\n        type=\\\"text\\\"\\n        name=\\\"email\\\"\\n        touched\\n        placeholder=\\\"Email\\\"\\n        {...validation}\\n      />\\n      {status.error && <label>{status.error}</label>}\\n      <Submit />\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      asyncTestInput,\n      Input,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const isValidEmail = value => !(value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) ? undefined : \"Mail not Valid\";\n\n        const required = value => value && value.trim() !== \"\" ? undefined : \"Required\";\n\n        const [status, validation] = useValidation([required, isValidEmail]);\n        return <Form mdxType=\"Form\">\n        <Input type=\"text\" name=\"email\" touched placeholder=\"Email\" {...validation} mdxType=\"Input\" />\n        {status.error && <label>{status.error}</label>}\n        <Submit mdxType=\"Submit\" />\n      </Form>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"validation---async\"\n    }}>{`Validation - Async`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Form, Input } from 'usetheform';\n`}</code></pre>\n    <Playground __position={3} __code={'() => {\\n  const [asyncStatus, asyncValidation] = useAsyncValidation(asyncTestInput)\\n  return (\\n    <Form>\\n      <Input\\n        type=\\\"text\\\"\\n        name=\\\"username\\\"\\n        touched\\n        placeholder=\\\"Username\\\"\\n        {...asyncValidation}\\n      />\\n      {asyncStatus.status === undefined && (\\n        <label>Async Check Not Started Yet</label>\\n      )}\\n      {asyncStatus.status === \\'asyncStart\\' && <label>Checking...</label>}\\n      {asyncStatus.status === \\'asyncError\\' && (\\n        <label>{asyncStatus.value}</label>\\n      )}\\n      {asyncStatus.status === \\'asyncSuccess\\' && (\\n        <label>{asyncStatus.value}</label>\\n      )}\\n      <br />\\n      <Submit />\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Form,\n      Submit,\n      asyncTestInput,\n      Input,\n      useValidation,\n      useAsyncValidation,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const [asyncStatus, asyncValidation] = useAsyncValidation(asyncTestInput);\n        return <Form mdxType=\"Form\">\n        <Input type=\"text\" name=\"username\" touched placeholder=\"Username\" {...asyncValidation} mdxType=\"Input\" />\n        {asyncStatus.status === undefined && <label>Async Check Not Started Yet</label>}\n        {asyncStatus.status === \"asyncStart\" && <label>Checking...</label>}\n        {asyncStatus.status === \"asyncError\" && <label>{asyncStatus.value}</label>}\n        {asyncStatus.status === \"asyncSuccess\" && <label>{asyncStatus.value}</label>}\n        <br />\n        <Submit mdxType=\"Submit\" />\n      </Form>;\n      }}\n    </Playground>\n    <h4 {...{\n      \"id\": \"detailed-explanation\"\n    }}>{`Detailed Explanation:`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { useForm } from 'usetheform'\n\nexport const asyncTestInput = value =>\n  new Promise((resolve, reject) => {\n    // it could be an API call or any async operation\n    setTimeout(() => {\n      if (value === \"foo\") {\n        reject(\"username already in use\");\n      } else {\n        resolve(\"Success\");\n      }\n    }, 1000);\n  });\n\nexport const Submit = () => {\n  const { isValid } = useForm();\n  return (\n    <button disabled={!isValid} type=\"submit\">\n      Submit\n    </button>\n  );\n};\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}